function [trainedClassifier, validationAccuracy] = RandForest_train(data, predictores, salida, numMaxSplits, numLearnCycles)

allVariableNames = data.Properties.VariableNames;
predictorNames = matlab.lang.makeValidName(allVariableNames(1:end-1));
isCategoricalPredictor = [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false];
classNames = categorical({'LAYING'; 'SITTING'; 'STANDING'; 'WALKING'; 'WALKING_DOWNSTAIRS'; 'WALKING_UPSTAIRS'});

% Train a classifier
% This code specifies all the classifier options and trains the classifier.
template = templateTree(...
    'MaxNumSplits', numMaxSplits, ...
    'NumVariablesToSample', 'all');
if (strcmp(numMaxSplits, 'default') && strcmp(numLearnCycles, 'default'))
    classificationEnsemble = fitcensemble(...
    predictores, ...
    salida, ...
    'OptimizeHyperparameters',{'NumLearningCycles','LearnRate','MaxNumSplits'}, ...
    'ClassNames', classNames);
else
    classificationEnsemble = fitcensemble(...
    predictores, ...
    salida, ...
    'Method', 'Bag', ...
    'NumLearningCycles', numLearnCycles, ...
    'Learners', template, ...
    'ClassNames', classNames);
end


% Create the result struct with predict function
predictorExtractionFcn = @(t) t(:, predictorNames);
ensemblePredictFcn = @(x) predict(classificationEnsemble, x);
trainedClassifier.predictFcn = @(x) ensemblePredictFcn(predictorExtractionFcn(x));

% Add additional fields to the result struct
trainedClassifier.RequiredVariables = {'angle_X_gravityMean_', 'angle_Y_gravityMean_', 'angle_Z_gravityMean_', 'angle_tBodyAccJerkMean__gravityMean_', 'angle_tBodyAccMean_gravity_', 'angle_tBodyGyroJerkMean_gravityMean_', 'angle_tBodyGyroMean_gravityMean_', 'fBodyAccJerk_bandsEnergy___17_1', 'fBodyAccJerk_bandsEnergy___17_2', 'fBodyAccJerk_bandsEnergy___17_24', 'fBodyAccJerk_bandsEnergy___17_3', 'fBodyAccJerk_bandsEnergy___17_32', 'fBodyAccJerk_bandsEnergy___17_4', 'fBodyAccJerk_bandsEnergy___1_1', 'fBodyAccJerk_bandsEnergy___1_16', 'fBodyAccJerk_bandsEnergy___1_2', 'fBodyAccJerk_bandsEnergy___1_24', 'fBodyAccJerk_bandsEnergy___1_3', 'fBodyAccJerk_bandsEnergy___1_4', 'fBodyAccJerk_bandsEnergy___1_5', 'fBodyAccJerk_bandsEnergy___1_6', 'fBodyAccJerk_bandsEnergy___1_8', 'fBodyAccJerk_bandsEnergy___25_1', 'fBodyAccJerk_bandsEnergy___25_2', 'fBodyAccJerk_bandsEnergy___25_3', 'fBodyAccJerk_bandsEnergy___25_32', 'fBodyAccJerk_bandsEnergy___25_4', 'fBodyAccJerk_bandsEnergy___25_48', 'fBodyAccJerk_bandsEnergy___33_1', 'fBodyAccJerk_bandsEnergy___33_2', 'fBodyAccJerk_bandsEnergy___33_3', 'fBodyAccJerk_bandsEnergy___33_4', 'fBodyAccJerk_bandsEnergy___33_40', 'fBodyAccJerk_bandsEnergy___33_48', 'fBodyAccJerk_bandsEnergy___41_1', 'fBodyAccJerk_bandsEnergy___41_2', 'fBodyAccJerk_bandsEnergy___41_48', 'fBodyAccJerk_bandsEnergy___49_1', 'fBodyAccJerk_bandsEnergy___49_2', 'fBodyAccJerk_bandsEnergy___49_3', 'fBodyAccJerk_bandsEnergy___49_4', 'fBodyAccJerk_bandsEnergy___49_56', 'fBodyAccJerk_bandsEnergy___49_64', 'fBodyAccJerk_bandsEnergy___57_1', 'fBodyAccJerk_bandsEnergy___57_2', 'fBodyAccJerk_bandsEnergy___57_64', 'fBodyAccJerk_bandsEnergy___9_1', 'fBodyAccJerk_bandsEnergy___9_16', 'fBodyAccJerk_bandsEnergy___9_2', 'fBodyAccJerk_energy___X', 'fBodyAccJerk_energy___Y', 'fBodyAccJerk_energy___Z', 'fBodyAccJerk_entropy___X', 'fBodyAccJerk_entropy___Y', 'fBodyAccJerk_entropy___Z', 'fBodyAccJerk_iqr___X', 'fBodyAccJerk_iqr___Y', 'fBodyAccJerk_iqr___Z', 'fBodyAccJerk_kurtosis___X', 'fBodyAccJerk_kurtosis___Y', 'fBodyAccJerk_kurtosis___Z', 'fBodyAccJerk_mad___X', 'fBodyAccJerk_mad___Y', 'fBodyAccJerk_mad___Z', 'fBodyAccJerk_maxInds_X', 'fBodyAccJerk_maxInds_Y', 'fBodyAccJerk_maxInds_Z', 'fBodyAccJerk_max___X', 'fBodyAccJerk_max___Y', 'fBodyAccJerk_max___Z', 'fBodyAccJerk_meanFreq___X', 'fBodyAccJerk_meanFreq___Y', 'fBodyAccJerk_meanFreq___Z', 'fBodyAccJerk_mean___X', 'fBodyAccJerk_mean___Y', 'fBodyAccJerk_mean___Z', 'fBodyAccJerk_min___X', 'fBodyAccJerk_min___Y', 'fBodyAccJerk_min___Z', 'fBodyAccJerk_skewness___X', 'fBodyAccJerk_skewness___Y', 'fBodyAccJerk_skewness___Z', 'fBodyAccJerk_sma__', 'fBodyAccJerk_std___X', 'fBodyAccJerk_std___Y', 'fBodyAccJerk_std___Z', 'fBodyAccMag_energy__', 'fBodyAccMag_entropy__', 'fBodyAccMag_iqr__', 'fBodyAccMag_kurtosis__', 'fBodyAccMag_mad__', 'fBodyAccMag_maxInds', 'fBodyAccMag_max__', 'fBodyAccMag_meanFreq__', 'fBodyAccMag_mean__', 'fBodyAccMag_min__', 'fBodyAccMag_skewness__', 'fBodyAccMag_sma__', 'fBodyAccMag_std__', 'fBodyAcc_bandsEnergy___17_1', 'fBodyAcc_bandsEnergy___17_2', 'fBodyAcc_bandsEnergy___17_24', 'fBodyAcc_bandsEnergy___17_3', 'fBodyAcc_bandsEnergy___17_32', 'fBodyAcc_bandsEnergy___17_4', 'fBodyAcc_bandsEnergy___1_1', 'fBodyAcc_bandsEnergy___1_16', 'fBodyAcc_bandsEnergy___1_2', 'fBodyAcc_bandsEnergy___1_24', 'fBodyAcc_bandsEnergy___1_3', 'fBodyAcc_bandsEnergy___1_4', 'fBodyAcc_bandsEnergy___1_5', 'fBodyAcc_bandsEnergy___1_6', 'fBodyAcc_bandsEnergy___1_8', 'fBodyAcc_bandsEnergy___25_1', 'fBodyAcc_bandsEnergy___25_2', 'fBodyAcc_bandsEnergy___25_3', 'fBodyAcc_bandsEnergy___25_32', 'fBodyAcc_bandsEnergy___25_4', 'fBodyAcc_bandsEnergy___25_48', 'fBodyAcc_bandsEnergy___33_1', 'fBodyAcc_bandsEnergy___33_2', 'fBodyAcc_bandsEnergy___33_3', 'fBodyAcc_bandsEnergy___33_4', 'fBodyAcc_bandsEnergy___33_40', 'fBodyAcc_bandsEnergy___33_48', 'fBodyAcc_bandsEnergy___41_1', 'fBodyAcc_bandsEnergy___41_2', 'fBodyAcc_bandsEnergy___41_48', 'fBodyAcc_bandsEnergy___49_1', 'fBodyAcc_bandsEnergy___49_2', 'fBodyAcc_bandsEnergy___49_3', 'fBodyAcc_bandsEnergy___49_4', 'fBodyAcc_bandsEnergy___49_56', 'fBodyAcc_bandsEnergy___49_64', 'fBodyAcc_bandsEnergy___57_1', 'fBodyAcc_bandsEnergy___57_2', 'fBodyAcc_bandsEnergy___57_64', 'fBodyAcc_bandsEnergy___9_1', 'fBodyAcc_bandsEnergy___9_16', 'fBodyAcc_bandsEnergy___9_2', 'fBodyAcc_energy___X', 'fBodyAcc_energy___Y', 'fBodyAcc_energy___Z', 'fBodyAcc_entropy___X', 'fBodyAcc_entropy___Y', 'fBodyAcc_entropy___Z', 'fBodyAcc_iqr___X', 'fBodyAcc_iqr___Y', 'fBodyAcc_iqr___Z', 'fBodyAcc_kurtosis___X', 'fBodyAcc_kurtosis___Y', 'fBodyAcc_kurtosis___Z', 'fBodyAcc_mad___X', 'fBodyAcc_mad___Y', 'fBodyAcc_mad___Z', 'fBodyAcc_maxInds_X', 'fBodyAcc_maxInds_Y', 'fBodyAcc_maxInds_Z', 'fBodyAcc_max___X', 'fBodyAcc_max___Y', 'fBodyAcc_max___Z', 'fBodyAcc_meanFreq___X', 'fBodyAcc_meanFreq___Y', 'fBodyAcc_meanFreq___Z', 'fBodyAcc_mean___X', 'fBodyAcc_mean___Y', 'fBodyAcc_mean___Z', 'fBodyAcc_min___X', 'fBodyAcc_min___Y', 'fBodyAcc_min___Z', 'fBodyAcc_skewness___X', 'fBodyAcc_skewness___Y', 'fBodyAcc_skewness___Z', 'fBodyAcc_sma__', 'fBodyAcc_std___X', 'fBodyAcc_std___Y', 'fBodyAcc_std___Z', 'fBodyBodyAccJerkMag_energy__', 'fBodyBodyAccJerkMag_entropy__', 'fBodyBodyAccJerkMag_iqr__', 'fBodyBodyAccJerkMag_kurtosis__', 'fBodyBodyAccJerkMag_mad__', 'fBodyBodyAccJerkMag_maxInds', 'fBodyBodyAccJerkMag_max__', 'fBodyBodyAccJerkMag_meanFreq__', 'fBodyBodyAccJerkMag_mean__', 'fBodyBodyAccJerkMag_min__', 'fBodyBodyAccJerkMag_skewness__', 'fBodyBodyAccJerkMag_sma__', 'fBodyBodyAccJerkMag_std__', 'fBodyBodyGyroJerkMag_energy__', 'fBodyBodyGyroJerkMag_entropy__', 'fBodyBodyGyroJerkMag_iqr__', 'fBodyBodyGyroJerkMag_kurtosis__', 'fBodyBodyGyroJerkMag_mad__', 'fBodyBodyGyroJerkMag_maxInds', 'fBodyBodyGyroJerkMag_max__', 'fBodyBodyGyroJerkMag_meanFreq__', 'fBodyBodyGyroJerkMag_mean__', 'fBodyBodyGyroJerkMag_min__', 'fBodyBodyGyroJerkMag_skewness__', 'fBodyBodyGyroJerkMag_sma__', 'fBodyBodyGyroJerkMag_std__', 'fBodyBodyGyroMag_energy__', 'fBodyBodyGyroMag_entropy__', 'fBodyBodyGyroMag_iqr__', 'fBodyBodyGyroMag_kurtosis__', 'fBodyBodyGyroMag_mad__', 'fBodyBodyGyroMag_maxInds', 'fBodyBodyGyroMag_max__', 'fBodyBodyGyroMag_meanFreq__', 'fBodyBodyGyroMag_mean__', 'fBodyBodyGyroMag_min__', 'fBodyBodyGyroMag_skewness__', 'fBodyBodyGyroMag_sma__', 'fBodyBodyGyroMag_std__', 'fBodyGyro_bandsEnergy___17_1', 'fBodyGyro_bandsEnergy___17_2', 'fBodyGyro_bandsEnergy___17_24', 'fBodyGyro_bandsEnergy___17_3', 'fBodyGyro_bandsEnergy___17_32', 'fBodyGyro_bandsEnergy___17_4', 'fBodyGyro_bandsEnergy___1_1', 'fBodyGyro_bandsEnergy___1_16', 'fBodyGyro_bandsEnergy___1_2', 'fBodyGyro_bandsEnergy___1_24', 'fBodyGyro_bandsEnergy___1_3', 'fBodyGyro_bandsEnergy___1_4', 'fBodyGyro_bandsEnergy___1_5', 'fBodyGyro_bandsEnergy___1_6', 'fBodyGyro_bandsEnergy___1_8', 'fBodyGyro_bandsEnergy___25_1', 'fBodyGyro_bandsEnergy___25_2', 'fBodyGyro_bandsEnergy___25_3', 'fBodyGyro_bandsEnergy___25_32', 'fBodyGyro_bandsEnergy___25_4', 'fBodyGyro_bandsEnergy___25_48', 'fBodyGyro_bandsEnergy___33_1', 'fBodyGyro_bandsEnergy___33_2', 'fBodyGyro_bandsEnergy___33_3', 'fBodyGyro_bandsEnergy___33_4', 'fBodyGyro_bandsEnergy___33_40', 'fBodyGyro_bandsEnergy___33_48', 'fBodyGyro_bandsEnergy___41_1', 'fBodyGyro_bandsEnergy___41_2', 'fBodyGyro_bandsEnergy___41_48', 'fBodyGyro_bandsEnergy___49_1', 'fBodyGyro_bandsEnergy___49_2', 'fBodyGyro_bandsEnergy___49_3', 'fBodyGyro_bandsEnergy___49_4', 'fBodyGyro_bandsEnergy___49_56', 'fBodyGyro_bandsEnergy___49_64', 'fBodyGyro_bandsEnergy___57_1', 'fBodyGyro_bandsEnergy___57_2', 'fBodyGyro_bandsEnergy___57_64', 'fBodyGyro_bandsEnergy___9_1', 'fBodyGyro_bandsEnergy___9_16', 'fBodyGyro_bandsEnergy___9_2', 'fBodyGyro_energy___X', 'fBodyGyro_energy___Y', 'fBodyGyro_energy___Z', 'fBodyGyro_entropy___X', 'fBodyGyro_entropy___Y', 'fBodyGyro_entropy___Z', 'fBodyGyro_iqr___X', 'fBodyGyro_iqr___Y', 'fBodyGyro_iqr___Z', 'fBodyGyro_kurtosis___X', 'fBodyGyro_kurtosis___Y', 'fBodyGyro_kurtosis___Z', 'fBodyGyro_mad___X', 'fBodyGyro_mad___Y', 'fBodyGyro_mad___Z', 'fBodyGyro_maxInds_X', 'fBodyGyro_maxInds_Y', 'fBodyGyro_maxInds_Z', 'fBodyGyro_max___X', 'fBodyGyro_max___Y', 'fBodyGyro_max___Z', 'fBodyGyro_meanFreq___X', 'fBodyGyro_meanFreq___Y', 'fBodyGyro_meanFreq___Z', 'fBodyGyro_mean___X', 'fBodyGyro_mean___Y', 'fBodyGyro_mean___Z', 'fBodyGyro_min___X', 'fBodyGyro_min___Y', 'fBodyGyro_min___Z', 'fBodyGyro_skewness___X', 'fBodyGyro_skewness___Y', 'fBodyGyro_skewness___Z', 'fBodyGyro_sma__', 'fBodyGyro_std___X', 'fBodyGyro_std___Y', 'fBodyGyro_std___Z', 'tBodyAccJerkMag_arCoeff__1', 'tBodyAccJerkMag_arCoeff__2', 'tBodyAccJerkMag_arCoeff__3', 'tBodyAccJerkMag_arCoeff__4', 'tBodyAccJerkMag_energy__', 'tBodyAccJerkMag_entropy__', 'tBodyAccJerkMag_iqr__', 'tBodyAccJerkMag_mad__', 'tBodyAccJerkMag_max__', 'tBodyAccJerkMag_mean__', 'tBodyAccJerkMag_min__', 'tBodyAccJerkMag_sma__', 'tBodyAccJerkMag_std__', 'tBodyAccJerk_arCoeff___X_1', 'tBodyAccJerk_arCoeff___X_2', 'tBodyAccJerk_arCoeff___X_3', 'tBodyAccJerk_arCoeff___X_4', 'tBodyAccJerk_arCoeff___Y_1', 'tBodyAccJerk_arCoeff___Y_2', 'tBodyAccJerk_arCoeff___Y_3', 'tBodyAccJerk_arCoeff___Y_4', 'tBodyAccJerk_arCoeff___Z_1', 'tBodyAccJerk_arCoeff___Z_2', 'tBodyAccJerk_arCoeff___Z_3', 'tBodyAccJerk_arCoeff___Z_4', 'tBodyAccJerk_correlation___X_Y', 'tBodyAccJerk_correlation___X_Z', 'tBodyAccJerk_correlation___Y_Z', 'tBodyAccJerk_energy___X', 'tBodyAccJerk_energy___Y', 'tBodyAccJerk_energy___Z', 'tBodyAccJerk_entropy___X', 'tBodyAccJerk_entropy___Y', 'tBodyAccJerk_entropy___Z', 'tBodyAccJerk_iqr___X', 'tBodyAccJerk_iqr___Y', 'tBodyAccJerk_iqr___Z', 'tBodyAccJerk_mad___X', 'tBodyAccJerk_mad___Y', 'tBodyAccJerk_mad___Z', 'tBodyAccJerk_max___X', 'tBodyAccJerk_max___Y', 'tBodyAccJerk_max___Z', 'tBodyAccJerk_mean___X', 'tBodyAccJerk_mean___Y', 'tBodyAccJerk_mean___Z', 'tBodyAccJerk_min___X', 'tBodyAccJerk_min___Y', 'tBodyAccJerk_min___Z', 'tBodyAccJerk_sma__', 'tBodyAccJerk_std___X', 'tBodyAccJerk_std___Y', 'tBodyAccJerk_std___Z', 'tBodyAccMag_arCoeff__1', 'tBodyAccMag_arCoeff__2', 'tBodyAccMag_arCoeff__3', 'tBodyAccMag_arCoeff__4', 'tBodyAccMag_energy__', 'tBodyAccMag_entropy__', 'tBodyAccMag_iqr__', 'tBodyAccMag_mad__', 'tBodyAccMag_max__', 'tBodyAccMag_mean__', 'tBodyAccMag_min__', 'tBodyAccMag_sma__', 'tBodyAccMag_std__', 'tBodyAcc_arCoeff___X_1', 'tBodyAcc_arCoeff___X_2', 'tBodyAcc_arCoeff___X_3', 'tBodyAcc_arCoeff___X_4', 'tBodyAcc_arCoeff___Y_1', 'tBodyAcc_arCoeff___Y_2', 'tBodyAcc_arCoeff___Y_3', 'tBodyAcc_arCoeff___Y_4', 'tBodyAcc_arCoeff___Z_1', 'tBodyAcc_arCoeff___Z_2', 'tBodyAcc_arCoeff___Z_3', 'tBodyAcc_arCoeff___Z_4', 'tBodyAcc_correlation___X_Y', 'tBodyAcc_correlation___X_Z', 'tBodyAcc_correlation___Y_Z', 'tBodyAcc_energy___X', 'tBodyAcc_energy___Y', 'tBodyAcc_energy___Z', 'tBodyAcc_entropy___X', 'tBodyAcc_entropy___Y', 'tBodyAcc_entropy___Z', 'tBodyAcc_iqr___X', 'tBodyAcc_iqr___Y', 'tBodyAcc_iqr___Z', 'tBodyAcc_mad___X', 'tBodyAcc_mad___Y', 'tBodyAcc_mad___Z', 'tBodyAcc_max___X', 'tBodyAcc_max___Y', 'tBodyAcc_max___Z', 'tBodyAcc_mean___X', 'tBodyAcc_mean___Y', 'tBodyAcc_mean___Z', 'tBodyAcc_min___X', 'tBodyAcc_min___Y', 'tBodyAcc_min___Z', 'tBodyAcc_sma__', 'tBodyAcc_std___X', 'tBodyAcc_std___Y', 'tBodyAcc_std___Z', 'tBodyGyroJerkMag_arCoeff__1', 'tBodyGyroJerkMag_arCoeff__2', 'tBodyGyroJerkMag_arCoeff__3', 'tBodyGyroJerkMag_arCoeff__4', 'tBodyGyroJerkMag_energy__', 'tBodyGyroJerkMag_entropy__', 'tBodyGyroJerkMag_iqr__', 'tBodyGyroJerkMag_mad__', 'tBodyGyroJerkMag_max__', 'tBodyGyroJerkMag_mean__', 'tBodyGyroJerkMag_min__', 'tBodyGyroJerkMag_sma__', 'tBodyGyroJerkMag_std__', 'tBodyGyroJerk_arCoeff___X_1', 'tBodyGyroJerk_arCoeff___X_2', 'tBodyGyroJerk_arCoeff___X_3', 'tBodyGyroJerk_arCoeff___X_4', 'tBodyGyroJerk_arCoeff___Y_1', 'tBodyGyroJerk_arCoeff___Y_2', 'tBodyGyroJerk_arCoeff___Y_3', 'tBodyGyroJerk_arCoeff___Y_4', 'tBodyGyroJerk_arCoeff___Z_1', 'tBodyGyroJerk_arCoeff___Z_2', 'tBodyGyroJerk_arCoeff___Z_3', 'tBodyGyroJerk_arCoeff___Z_4', 'tBodyGyroJerk_correlation___X_Y', 'tBodyGyroJerk_correlation___X_Z', 'tBodyGyroJerk_correlation___Y_Z', 'tBodyGyroJerk_energy___X', 'tBodyGyroJerk_energy___Y', 'tBodyGyroJerk_energy___Z', 'tBodyGyroJerk_entropy___X', 'tBodyGyroJerk_entropy___Y', 'tBodyGyroJerk_entropy___Z', 'tBodyGyroJerk_iqr___X', 'tBodyGyroJerk_iqr___Y', 'tBodyGyroJerk_iqr___Z', 'tBodyGyroJerk_mad___X', 'tBodyGyroJerk_mad___Y', 'tBodyGyroJerk_mad___Z', 'tBodyGyroJerk_max___X', 'tBodyGyroJerk_max___Y', 'tBodyGyroJerk_max___Z', 'tBodyGyroJerk_mean___X', 'tBodyGyroJerk_mean___Y', 'tBodyGyroJerk_mean___Z', 'tBodyGyroJerk_min___X', 'tBodyGyroJerk_min___Y', 'tBodyGyroJerk_min___Z', 'tBodyGyroJerk_sma__', 'tBodyGyroJerk_std___X', 'tBodyGyroJerk_std___Y', 'tBodyGyroJerk_std___Z', 'tBodyGyroMag_arCoeff__1', 'tBodyGyroMag_arCoeff__2', 'tBodyGyroMag_arCoeff__3', 'tBodyGyroMag_arCoeff__4', 'tBodyGyroMag_energy__', 'tBodyGyroMag_entropy__', 'tBodyGyroMag_iqr__', 'tBodyGyroMag_mad__', 'tBodyGyroMag_max__', 'tBodyGyroMag_mean__', 'tBodyGyroMag_min__', 'tBodyGyroMag_sma__', 'tBodyGyroMag_std__', 'tBodyGyro_arCoeff___X_1', 'tBodyGyro_arCoeff___X_2', 'tBodyGyro_arCoeff___X_3', 'tBodyGyro_arCoeff___X_4', 'tBodyGyro_arCoeff___Y_1', 'tBodyGyro_arCoeff___Y_2', 'tBodyGyro_arCoeff___Y_3', 'tBodyGyro_arCoeff___Y_4', 'tBodyGyro_arCoeff___Z_1', 'tBodyGyro_arCoeff___Z_2', 'tBodyGyro_arCoeff___Z_3', 'tBodyGyro_arCoeff___Z_4', 'tBodyGyro_correlation___X_Y', 'tBodyGyro_correlation___X_Z', 'tBodyGyro_correlation___Y_Z', 'tBodyGyro_energy___X', 'tBodyGyro_energy___Y', 'tBodyGyro_energy___Z', 'tBodyGyro_entropy___X', 'tBodyGyro_entropy___Y', 'tBodyGyro_entropy___Z', 'tBodyGyro_iqr___X', 'tBodyGyro_iqr___Y', 'tBodyGyro_iqr___Z', 'tBodyGyro_mad___X', 'tBodyGyro_mad___Y', 'tBodyGyro_mad___Z', 'tBodyGyro_max___X', 'tBodyGyro_max___Y', 'tBodyGyro_max___Z', 'tBodyGyro_mean___X', 'tBodyGyro_mean___Y', 'tBodyGyro_mean___Z', 'tBodyGyro_min___X', 'tBodyGyro_min___Y', 'tBodyGyro_min___Z', 'tBodyGyro_sma__', 'tBodyGyro_std___X', 'tBodyGyro_std___Y', 'tBodyGyro_std___Z', 'tGravityAccMag_arCoeff__1', 'tGravityAccMag_arCoeff__2', 'tGravityAccMag_arCoeff__3', 'tGravityAccMag_arCoeff__4', 'tGravityAccMag_energy__', 'tGravityAccMag_entropy__', 'tGravityAccMag_iqr__', 'tGravityAccMag_mad__', 'tGravityAccMag_max__', 'tGravityAccMag_mean__', 'tGravityAccMag_min__', 'tGravityAccMag_sma__', 'tGravityAccMag_std__', 'tGravityAcc_arCoeff___X_1', 'tGravityAcc_arCoeff___X_2', 'tGravityAcc_arCoeff___X_3', 'tGravityAcc_arCoeff___X_4', 'tGravityAcc_arCoeff___Y_1', 'tGravityAcc_arCoeff___Y_2', 'tGravityAcc_arCoeff___Y_3', 'tGravityAcc_arCoeff___Y_4', 'tGravityAcc_arCoeff___Z_1', 'tGravityAcc_arCoeff___Z_2', 'tGravityAcc_arCoeff___Z_3', 'tGravityAcc_arCoeff___Z_4', 'tGravityAcc_correlation___X_Y', 'tGravityAcc_correlation___X_Z', 'tGravityAcc_correlation___Y_Z', 'tGravityAcc_energy___X', 'tGravityAcc_energy___Y', 'tGravityAcc_energy___Z', 'tGravityAcc_entropy___X', 'tGravityAcc_entropy___Y', 'tGravityAcc_entropy___Z', 'tGravityAcc_iqr___X', 'tGravityAcc_iqr___Y', 'tGravityAcc_iqr___Z', 'tGravityAcc_mad___X', 'tGravityAcc_mad___Y', 'tGravityAcc_mad___Z', 'tGravityAcc_max___X', 'tGravityAcc_max___Y', 'tGravityAcc_max___Z', 'tGravityAcc_mean___X', 'tGravityAcc_mean___Y', 'tGravityAcc_mean___Z', 'tGravityAcc_min___X', 'tGravityAcc_min___Y', 'tGravityAcc_min___Z', 'tGravityAcc_sma__', 'tGravityAcc_std___X', 'tGravityAcc_std___Y', 'tGravityAcc_std___Z'};
trainedClassifier.ClassificationEnsemble = classificationEnsemble;
trainedClassifier.About = 'This struct is a trained model exported from Classification Learner R2023a.';
trainedClassifier.HowToPredict = sprintf('To make predictions on a new table, T, use: \n  [yfit,scores] = c.predictFcn(T) \nreplacing ''c'' with the name of the variable that is this struct, e.g. ''trainedModel''. \n \nThe table, T, must contain the variables returned by: \n  c.RequiredVariables \nVariable formats (e.g. matrix/vector, datatype) must match the original training data. \nAdditional variables are ignored. \n \nFor more information, see <a href="matlab:helpview(fullfile(docroot, ''stats'', ''stats.map''), ''appclassification_exportmodeltoworkspace'')">How to predict using an exported model</a>.');

% Extract predictors and response
% This code processes the data into the right shape for training the
% model.

isCategoricalPredictor = [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false];
classNames = categorical({'LAYING'; 'SITTING'; 'STANDING'; 'WALKING'; 'WALKING_DOWNSTAIRS'; 'WALKING_UPSTAIRS'});

% Perform cross-validation
partitionedModel = crossval(trainedClassifier.ClassificationEnsemble, 'KFold', 5);

% Compute validation predictions
[validationPredictions, validationScores] = kfoldPredict(partitionedModel);

% Compute validation accuracy
validationAccuracy = 1 - kfoldLoss(partitionedModel, 'LossFun', 'ClassifError');
